version: 2.1

commands:
  config_git:
    parameters:
      user_email:
        type: string
        default: tim@timothyreynolds.co.uk
      user_name:
        type: string
        default: Tim Reynolds
    steps: 
      - run:
          command: |
            git config user.email <<parameters.user_email>>
            git config user.name <<parameters.user_name>>

  checkout_and_restore_cache:
    steps:
      - checkout
      - restore_cache:
          name: Restore Rush Global Cache
          keys:
            - rush-global-v1-{{ checksum "rush.json" }}
      - restore_cache:
          name: Restore Rush Local Cache
          keys:
            - rush-local-v1-{{ checksum "common/config/rush/pnpm-lock.yaml" }}

  attach_workspace_with_global_cache:
    steps:
      - attach_workspace:
          at: ./
      - restore_cache:
          name: Restore Rush Global Cache
          keys:
            - rush-global-v1-{{ checksum "rush.json" }}
  
  run_rush:
    parameters:
      command:
        type: string
    steps:
      - run:
          name: <<parameters.command>>
          command: node common/scripts/install-run-rush.js <<parameters.command>>

  add_github_to_known_hosts:
    steps: 
      - run:
          name: Add github.com to known hosts
          command: | 
            mkdir -p ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts

jobs:
  install:
    docker:
      - image: cimg/node:14.18
    steps:
      - checkout_and_restore_cache
      - run_rush:
          command: check
      - run_rush:
          command: install
      - save_cache:
          name: Save Rush Global Cache
          key: rush-global-v1-{{ checksum "rush.json" }}
          paths:
            - "/home/circleci/.rush"
      - persist_to_workspace:
          root: ./
          paths:
            - .

  save_local_cache:
    docker: 
      - image: cimg/node:14.18
    steps:
      - attach_workspace:
          at: ./
      - save_cache:
          name: Save Rush Local Cache
          key: rush-local-v1-{{ checksum "common/config/rush/pnpm-lock.yaml" }}
          paths:
            - "./common/temp"

  build:
    docker: 
      - image: cimg/node:14.18
    steps:
      - attach_workspace_with_global_cache
      - run_rush:
          command: rebuild
      - persist_to_workspace:
          root: ./
          paths:
            # shouldn't need to re-persist all the higher layer things, just wastes time
            - ./packages/
            - ./common/temp/rush-link.json

  lint:
    docker: 
      - image: cimg/node:14.18
    steps:
      - attach_workspace_with_global_cache
      - run_rush:
          command: lint

  verify_change:
    docker: 
      - image: cimg/node:14.18
    steps:
      - attach_workspace_with_global_cache
      - add_github_to_known_hosts
      - run_rush:
          command: change --verify

  test:
    docker: 
      - image: cimg/node:14.18
    steps:
      - attach_workspace_with_global_cache
      - run_rush:
          command: test

  publish_dry_run:
    docker: 
      - image: cimg/node:14.18
    steps:
      - attach_workspace_with_global_cache
      - run_rush:
          command: publish

  publish:
    docker: 
      - image: cimg/node:14.18
    steps:
      - attach_workspace_with_global_cache
      - config_git
      - add_github_to_known_hosts
      - run_rush:
          command: publish --add-commit-details --apply --target-branch main --publish

workflows:
  version: 2

  build-deploy:
    jobs:
      - install
      - build:
          requires:
            - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - install
      - verify_change:
          requires:
            - install
      - save_local_cache:
          requires:
            - install
      
      # Main publishing flow
      - publish_dry_run:
          context: 
            - npm
          requires:
            - save_local_cache
            - verify_change
            - test
            - lint 
            - build
          filters:
            branches:
              only:
                - main
      - approve_publish:
          requires:
            - publish_dry_run
          type: approval
      - publish:
          context: 
            - npm
          requires:
            - approve_publish